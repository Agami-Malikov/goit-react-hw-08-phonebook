{"version":3,"file":"static/js/327.f49c81eb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/form.module.css?cfaa","components/Form/Form.jsx","redux/items/selectors.js","redux/filter/selectors.js","components/pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__R0BG5\",\"item\":\"contactList_item__iETfD\",\"text\":\"contactList_text__2xPhM\",\"btn\":\"contactList_btn__D1sqk\"};","import s from './contactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, removeContact }) => {\n  const elements =\n    contacts &&\n    contacts.map(({ name, number, id }) => {\n      return (\n        <li className={s.item} key={id}>\n          <p className={s.text}>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            className={s.btn}\n            onClick={() => removeContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      );\n    });\n\n  return <ul className={s.list}>{elements}</ul>;\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  removeContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label htmlFor=\"filter\">Find Contacts by Name</label>\n      <input style={{display: 'block', marginTop: '5px'}} value={value} type=\"text\" name=\"filter\" onChange={onChange} />\n    </>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__v9NsD\",\"input\":\"form_input__cqeL6\"};","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport s from './form.module.css';\nconst ContactForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(state);\n    setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        className={s.input}\n        onChange={handleChange}\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor=\"phone\">Number</label>\n      <input\n        className={s.input}\n        onChange={handleChange}\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","export const getItems = (state) => state.contacts.items","export const getFilter = ({ filter }) => filter;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from 'components/Form/Form';\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from 'redux/items/items-operations';\nimport { setFilter } from 'redux/filter/filter-action';\n\nimport { getItems } from 'redux/items/selectors';\nimport { getFilter } from 'redux/filter/selectors';\n\nconst Contacts = () => {\n  const getState = ({ contacts }) => ({\n    loading: contacts.loading,\n    error: contacts.error,\n  });\n\n  const contacts = useSelector(getItems);\n  const filter = useSelector(getFilter);\n  const { loading, error } = useSelector(getState);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = data => {\n    const action = addContact(data);\n    dispatch(action);\n  };\n\n  const onRemoveContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  const getFiltredContacts = () => {\n    const normalizeFilter = filter?.toLowerCase();\n    const filterContacts = contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n    return filterContacts;\n  };\n\n  const filtredArray = getFiltredContacts();\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={onAddContact} />\n      <h2>Contacts</h2>\n      <Filter\n        value={filter}\n        onChange={event => dispatch(setFilter(event.currentTarget.value))}\n      />\n      {error && <p>Не удалось загрузить контакты! </p>}\n      {loading ? (\n        <p>...Loadind</p>\n      ) : (\n        <ContactList contacts={filtredArray} removeContact={onRemoveContact} />\n      )}\n    </div>\n  );\n};\n\nexport default Contacts"],"names":["contacts","removeContact","elements","map","name","number","id","className","s","type","onClick","value","onChange","htmlFor","style","display","marginTop","onSubmit","useState","state","setState","handleChange","target","e","preventDefault","pattern","title","required","getItems","items","getFilter","filter","useSelector","loading","error","dispatch","useDispatch","useEffect","fetchContacts","filtredArray","normalizeFilter","toLowerCase","contact","includes","getFiltredContacts","data","action","addContact","event","setFilter","currentTarget"],"sourceRoot":""}